@page "/Trabajo/Details/{TrabajoId:int}"
@inject TrabajoService trabajoService
@inject TecnicoService tecnicoService
@inject ClienteService clienteService
@inject PrioridadService prioridadService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Detalles</PageTitle>

@if (trabajo != null)
{
    <div class="container">
        <div class="card shadow-header">
            <div class="card-header bg-primary text-white py-2 rounded">
                <h5 style="font-weight: bold;" class="font-weight-bold">Detalles del Trabajo</h5>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card-body">
                            <ul class="list-unstyled">
                                <li><strong>TrabajoId:</strong> @trabajo.TrabajoId</li>
                                <li><strong>Fecha:</strong> @trabajo.Fecha.ToShortDateString()</li>
                                <li><strong>Cliente:</strong> @cliente?.Nombres ?? "No disponible"</li>
                                <li><strong>Técnico:</strong> @tecnico?.Nombres ?? "No disponible"</li>
                                <li><strong>Prioridad:</strong> @prioridad?.Descripcion ?? "No disponible"</li>
                                <li><strong>Descripción:</strong> @trabajo.Descripcion</li>
                                <li><strong>Monto:</strong> @trabajo.Monto</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="card mt-6 border-success">
                    <div class="card-header bg-primary text-white">
                        <h5 class="font-weight-bold">Detalles de artículos utilizados</h5>
                    </div>
                    <div class="card-body">
                        @if (listatrabajodetalle != null && listatrabajodetalle.Any())
                        {
                            <div class="table-responsive mt-3">
                                <table class="table table-bordered text-center">
                                    <thead class="bg-primary text-white">
                                        <tr>
                                            <th>Artículo</th>
                                            <th>Cantidad</th>
                                            <th>Precio</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var detalle in listatrabajodetalle)
                                        {
                                            var articulo = listaarticulo.FirstOrDefault(a => a.ArticuloId == detalle.ArticuloId);
                                            <tr>
                                                <td>@(articulo?.Descripcion ?? "Artículo no encontrado")</td>
                                                <td>@detalle.Cantidad</td>
                                                <td>@detalle.Precio.ToString("C")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <p>No se han registrado artículos para este trabajo.</p>
                        }
                    </div>
                </div>

                <div class="card-footer text-center">
                    <a href="/Trabajo/Index" class="btn btn-outline-primary mx-2">
                        <span class="bi bi-box-arrow-left"></span> Retroceder
                    </a>
                    <a href=@($"https://wa.me/{cliente?.WhatsApp}?text={ObtenerMensajeFinalizar()}") class="btn btn-outline-success mx-2">
                        <span class="bi bi-whatsapp"></span> Finalizar
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int TrabajoId { get; set; }
    public Trabajos? trabajo { get; set; }
    public Clientes? cliente { get; set; }
    public Tecnicos? tecnico { get; set; }
    public Prioridades? prioridad { get; set; }
    public List<TrabajosDetalle> listatrabajodetalle { get; set; } = new List<TrabajosDetalle>();
    public List<Articulos> listaarticulo { get; set; } = new List<Articulos>();

    protected override async Task OnInitializedAsync()
    {
        await CargarTrabajoYDetalles();
    }

    private async Task CargarTrabajoYDetalles()
    {
        trabajo = await trabajoService.Buscar(TrabajoId);

        if (trabajo != null)
        {
            cliente = trabajo.ClienteId.HasValue ? await clienteService.Buscar(trabajo.ClienteId.Value) : null;
            tecnico = trabajo.TecnicoId.HasValue ? await tecnicoService.Buscar(trabajo.TecnicoId.Value) : null;
            prioridad = trabajo.PrioridadId.HasValue ? await prioridadService.Buscar(trabajo.PrioridadId.Value) : null;
            listatrabajodetalle = await trabajoService.ObtenerDetalles(TrabajoId);
            listaarticulo = await trabajoService.ListarArticulos();
        }
    }

    private string ObtenerMensajeFinalizar()
    {
        return $"El trabajo de {cliente?.Nombres} ya está finalizado.";
    }
}