@page "/Trabajo/Details/{TrabajoId:int}"
@inject TrabajoService trabajoService
@inject TecnicoService tecnicoService
@inject ClienteService clienteService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Detalles</PageTitle>

@if (trabajo != null)
{
    <div class="container">
        <div class="card shadow-header">
            <div class="card-header bg-primary text-center text-white py-2 rounded">
                <h3 style="font-weight: bold;" class="font-weight-bold">Detalles del Trabajo</h3>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card-body">
                            <ul class="list-unstyled">
                                <li><strong>TrabajoId:</strong> @trabajo.TrabajoId</li>
                                <li><strong>Fecha:</strong> @trabajo.Fecha</li>
                                <li><strong>ClienteId:</strong> @cliente.Nombres</li>
                                <li><strong>TecnicoId:</strong> @tecnico.Nombres</li>
                                <li><strong>Descripci&oacute;n:</strong> @trabajo.Descripcion</li>
                                <li><strong>Monto:</strong> @trabajo.Monto</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer d-inline-block">
            <a href="/Trabajo/Index" class="btn btn-outline-primary">
                <span class="bi bi-box-arrow-left"></span> Retroceder
            </a>
        </div>
        <div class="card-footer d-inline-block">
            <a @onclick="Finalizar" class="btn btn-outline-success">
                <span class="bi bi-send-check"></span> Enviar Mensaje
            </a>
        </div>
    </div>
}

@code {
    [Parameter]
    public int TrabajoId { get; set; }
    public Trabajos? trabajo { get; set; } = new Trabajos();
    public Clientes? cliente { get; set; } = new Clientes();
    public Tecnicos? tecnico { get; set; } = new Tecnicos();

    protected override async Task OnInitializedAsync()
    {
        if (TrabajoId != 0)
        {
            trabajo = await trabajoService.Buscar(TrabajoId);

            if (trabajo?.ClienteId.HasValue == true)
            {
                cliente = await clienteService.Buscar(trabajo.ClienteId.Value);
            }
            if (trabajo?.TecnicoId.HasValue == true)
            {
                tecnico = await tecnicoService.Buscar(trabajo.TecnicoId.Value);
            }
        }
    }

    public async Task Finalizar()
    {
        var mensaje = $"El trabajo {TrabajoId} ya está finalizado";
        navigationManager.NavigateTo("");
    }
}