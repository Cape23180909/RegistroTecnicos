@page "/Trabajo/Details/{TrabajoId:int}"
@inject TrabajoService trabajoService
@inject TecnicoService tecnicoService
@inject ClienteService clienteService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Detalles</PageTitle>

@if (trabajo != null)
{
    <div class="container">
        <div class="card shadow-header">
            <div class="card-header bg-primary text-center text-white py-2 rounded">
                <h3 style="font-weight: bold;" class="font-weight-bold">Detalles del Trabajo</h3>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card-body">
                            <ul class="list-unstyled">
                                <li><strong>TrabajoId:</strong> @trabajo.TrabajoId</li>
                                <li><strong>Fecha:</strong> @trabajo.Fecha</li>
                                <li><strong>ClienteId:</strong> @cliente.Nombres</li>
                                <li><strong>TecnicoId:</strong> @tecnico.Nombres</li>
                                <li><strong>Descripción:</strong> @trabajo.Descripcion</li>
                                <li><strong>Monto:</strong> @trabajo.Monto</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer d-inline-block">
            <a href="/Trabajo/Index" class="btn btn-outline-primary">
                <span class="bi bi-box-arrow-left"></span> Retroceder
            </a>
            <div class="card-footer d-inline-block">
                <a href=@($"https://wa.me/{trabajo.Clientes?.WhatsApp}?text={ObtenerMensajeFinalizar()}") class="btn btn-outline-success">
                    <span class="bi bi-check-square"></span> Finalizar
                </a>
            </div>
        </div>
     
    </div>
}

@code {
    [Parameter]
    public int TrabajoId { get; set; }

    public Trabajos? trabajo { get; set; } = new Trabajos();
    public Clientes? cliente { get; set; } = new Clientes();
    public Tecnicos? tecnico { get; set; } = new Tecnicos();

    protected override async Task OnInitializedAsync()
    {
        if (TrabajoId != 0)
        {
            trabajo = await trabajoService.Buscar(TrabajoId);

            if (trabajo?.ClienteId.HasValue == true)
            {
                cliente = await clienteService.Buscar(trabajo.ClienteId.Value);
            }
            if (trabajo?.TecnicoId.HasValue == true)
            {
                tecnico = await tecnicoService.Buscar(trabajo.TecnicoId.Value);
            }
        }
    }

    // Método para obtener la URL de WhatsApp usando el número del cliente
    private string ObtenerUrlWhatsApp()
    {
        if (cliente?.WhatsApp != null)
        {
            string mensaje = ObtenerMensajeFinalizar();
            string mensajeEscapado = Uri.EscapeDataString(mensaje);

            string url = $"https://wa.me/{cliente.WhatsApp}?text={mensajeEscapado}";
            return url;
        }
        else
        {
            return "#";
        }
    }

    // Método para generar el mensaje de finalización
    private string ObtenerMensajeFinalizar()
    {
        return $"El trabajo de {cliente?.Nombres} ya está finalizado.";
    }

    // Método para enviar el mensaje de WhatsApp
    private async Task EnviarMensajeWhatsApp()
    {
        string urlWhatsApp = ObtenerUrlWhatsApp();

        if (urlWhatsApp != "#")
        {
            navigationManager.NavigateTo(urlWhatsApp, true); 
        }
    }
}