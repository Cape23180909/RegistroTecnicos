@page "/Cotizacion/Index"
@inject CotizacionService cotizacionService
@inject ClienteService clienteService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Consulta de Cotizaci&oacute;nes</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header d-flex justify-content-between">
            <h5 class="card-title">Consulta de cotizaci&oacute;nes</h5>
            <a href="/Cotizacion/Create" class="btn btn-primary">
                <span class="bi bi-plus-square mt-3"></span> Crear
            </a>
        </div>

        <div class="row mb-3 align-items-end">
            <div class="col-md-3">
                <label for="Filtro" class="form-label">Filtrar por:</label>
                <select @bind="filtro" class="form-select">
                    <option value="ID">Cotizaci&oacute;nId</option>
                    <option value="Fecha">Fecha</option>
                    <option value="Cliente">Cliente</option>
                </select>
            </div>

            <div class="col-md-6">
                <label for="ValorFiltro" class="form-label">B&uacute;squeda:</label>
                <div class="input-group">
                    <input @bind="valorFiltro" class="form-control" placeholder="Buscar" />
                    <button @onclick="Buscar" class="btn btn-outline-primary" type="button">
                        <span class="bi bi-search"></span> Buscar
                    </button>
                    <button @onclick="Restablecer" class="btn btn-outline-secondary" type="button">
                        <span class="bi bi-arrow-clockwise"></span> Restablecer
                    </button>
                </div>
            </div>
        </div>

        @*Campos de fecha Desde y Hasta *@
        <div class="row mb-3">
            <div class="col-md-3">
                <label for="Desde" class="form-label">Desde:</label>
                <InputDate @bind-Value="Desde" class="form-control" Culture="es-ES" />
            </div>
            <div class="col-md-3">
                <label for="Hasta" class="form-label">Hasta:</label>
                <InputDate @bind-Value="Hasta" class="form-control" Culture="es-ES" />
            </div>
        </div>

        @* Tabla de cotizaciones *@
        <table class="table table-bordered text-center">
            <thead class="border-primary text-white">
                <tr>
                    <th>Cotizaci&oacute;nId</th>
                    <th>Fecha</th>
                    <th>ClienteId</th>
                    <th>Observaci&oacute;n</th>
                    <th>Monto</th>
                    <th>Ver</th>
                    <th>Modificar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cotizacion in Listacotizacion)
                {
                    <tr>
                        <td>@cotizacion.CotizacionId</td>
                        <td>@(cotizacion.Fecha.HasValue ? cotizacion.Fecha.Value.ToString("dd/MM/yyyy") : "")</td>
                        <td>@cotizacion.Clientes?.Nombres</td>
                        <td>@cotizacion.Observacion</td>
                        <td>@cotizacion.Monto</td>

                        <td>
                            <a href="/Cotizacion/Details/@cotizacion.CotizacionId" class="btn btn-outline-primary"><span class="bi bi-info-circle-fill"></span></a>
                        </td>

                        <td>
                            <a href="/Cotizacion/Edit/@cotizacion.CotizacionId" class="btn btn-outline-success"><span class="bi bi-marker-tip"></span></a>
                        </td>

                        <td>
                            <a href="/Cotizacion/Delete/@cotizacion.CotizacionId" class="btn btn-outline-warning"><span class="bi bi-dash-circle-fill"></span></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="card-footer text-start">
            <p>Total de cotizaci&oacute;nes: @Listacotizacion.Count</p>
        </div>
    </div>
</div>

@code {
    public Cotizaciones cotizacion { get; set; } = new Cotizaciones();
    public Clientes cliente { get; set; } = new Clientes();
    public List<Cotizaciones> Listacotizacion { get; set; } = new List<Cotizaciones>();
    public string filtro = "ID";
    public string valorFiltro = "";
    public DateTime? Desde { get; set; }
    public DateTime? Hasta { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Listacotizacion = await cotizacionService.Listar(c => true);
    }

    public async Task Buscar()
    {
        if (string.IsNullOrWhiteSpace(valorFiltro) && !Desde.HasValue && !Hasta.HasValue)
        {
            Listacotizacion = await cotizacionService.Listar(t => true);
        }
        else
        {
            if (filtro == "ID" && int.TryParse(valorFiltro, out int cotizacionId))
            {
                Listacotizacion = await cotizacionService.Listar(c => c.CotizacionId == cotizacionId);
            }
            else if (filtro == "Cliente")
            {
                var cliente = await clienteService.BuscarPorNombre(valorFiltro);
                Listacotizacion = cliente != null
                    ? await cotizacionService.Listar(c => c.ClienteId == cliente.ClienteId)
                    : new List<Cotizaciones>();
            }
            else if (filtro == "Fecha")
            {
                Listacotizacion = await cotizacionService.Listar(c =>
                    c.Fecha.HasValue &&
                    (!Desde.HasValue || c.Fecha.Value >= Desde) &&
                    (!Hasta.HasValue || c.Fecha.Value <= Hasta));
            }
        }
    }

    public async Task Restablecer()
    {
        filtro = "ID";
        valorFiltro = "";
        Desde = null;
        Hasta = null;
        Listacotizacion = await cotizacionService.Listar(c => true);
    }
}